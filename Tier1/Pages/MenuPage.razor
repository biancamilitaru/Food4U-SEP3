@page "/MenuPage"
@using Entities
@using Client.Components
@using Client.Components.MenuPageComponents
@using Microsoft.AspNetCore.Components
@using System.Text.Json
@using Client.Data.CategoryService
@using Client.Data.MenuService
@inject IJSRuntime jsRuntime;
@inject ICategoryServiceT1 categoryService;
@inject IMenuServiceT1 menuService;


@if (5==4)
{
    <div class="card">
        <div class="card-body">
            <h5>Menu is not created</h5>
            <p>Click the button below to create a new one</p>
            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#createMenu">
                Create a Menu
            </button>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="createMenu" tabindex="-1" role="dialog" aria-labelledby="createMenuLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="createMenuLabel">New menu</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <!--NEED TO INSERT MENU MODEL <EditForm Model="  " OnValidSubmit="@AddMenu"> -->
                    <div class="modal-body">
                        <!--NEED TO INSERT _menu.Description in BIND VALUE <InputTextArea type="password" placeholder="Enter description of your menu" class="form-control" @bind-Value="   "/> -->
                    </div>
                    <div class="modal-footer">
                        <p class="actions"><button class="btn btn-secondary" data-dismiss="modal">Not yet</button></p>
                        <p class="actions"><button class="btn btn-success" type="submit">Create a new menu</button></p>
                    </div>
                <!--</EditForm>-->
            </div>
        </div>
    </div>
}



    

<!--NEW MENU-->
<!--NEW MENU-->
<!--NEW MENU-->
@if (restaurant.Name != null)
{
    <!--Main EDIT-->
<div class="card" style="background-color: #E9ECEF; min-height: 100px; border: 0" xmlns="http://www.w3.org/1999/html">
    <div class="card-body">
        <div style="color: #F65A4B; padding-right: 15px">
            <h3>Your Menu</h3>
        </div>
        <a data-toggle="modal" data-target="#EditMenu"><p style="padding-left: 20px">@restaurant.Menu.Description</p></a>
    </div>
</div>
<!--Main EDIT-->

<br/>

<!--Categories ADD NEW-->
<div class="div-category">
    <div class="row" style="padding-left: 20px" xmlns="http://www.w3.org/1999/html">
        <div class="column" style="padding-right: 20px">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="" class="bi bi-arrow-down-right-square" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M15 2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2zM0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm5.854 3.146a.5.5 0 1 0-.708.708L9.243 9.95H6.475a.5.5 0 1 0 0 1h3.975a.5.5 0 0 0 .5-.5V6.475a.5.5 0 1 0-1 0v2.768L5.854 5.146z"/>
            </svg>
        </div>

        <div class="column" style="padding-right: 20px">
            <h4>Categories</h4>
        </div>
        <div class="column">
            <a data-toggle="modal" data-target="#AddCategory">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="" class="bi bi-clipboard-plus" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M8 7a.5.5 0 0 1 .5.5V9H10a.5.5 0 0 1 0 1H8.5v1.5a.5.5 0 0 1-1 0V10H6a.5.5 0 0 1 0-1h1.5V7.5A.5.5 0 0 1 8 7z"/>
                    <path d="M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z"/>
                    <path d="M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z"/>
                </svg>
            </a>
        </div>
    </div>
</div>
<!--Categories ADD NEW-->

@foreach (Category category in categories)
{
    <CategoryComponent Category="category"></CategoryComponent>
}





<!--NEW MENU-->
<!--NEW MENU-->
<!--NEW MENU-->


<!--MODAL TO EDIT MENU DESCRIPTION-->
<div class="modal fade" id="EditMenu" tabindex="-1" role="dialog" aria-labelledby="EditMenuLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="AddCategoryLabel">Edit Menu</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <EditForm Model="restaurant.Menu" OnValidSubmit="@EditMenuDescription">
                <div class="modal-body">
                    <div style="padding-bottom: 10px">
                        <InputTextArea placeholder="Enter menu description" class="form-control" @bind-Value="restaurant.Menu.Description"/>
                    </div>
                </div>
                <div class="modal-footer">
                    <p class="actions"><button class="btn btn-secondary" data-dismiss="modal">Cancel</button></p>
                    <p class="actions"><button class="btn btn-success" type="submit">Edit menu</button></p>
                </div>
            </EditForm>
        </div>
    </div>
</div>
    <!--MODAL TO EDIT MENU DESCRIPTION-->
    
    
    <!--MODAL TO ADD CATEGORY-->
    <div class="modal fade" id="AddCategory" tabindex="-1" role="dialog" aria-labelledby="EditMenuLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="AddCategoryLabel">Edit Menu</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <EditForm Model="newCategory" OnValidSubmit="@AddCategory">
                    <div class="modal-body">
                        <div style="padding-bottom: 10px">
                            <InputTextArea placeholder="Enter menu description" class="form-control" @bind-Value="newCategory.Name"/>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <p class="actions"><button class="btn btn-secondary" data-dismiss="modal">Cancel</button></p>
                        <p class="actions"><button class="btn btn-success" type="submit">Add category</button></p>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
    <!--MODAL TO ADD CATEGORY-->
}




@code
{
    private Restaurant restaurant = new Restaurant();
    private IList<Category> categories = null;
    
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            await ReadRestaurant();
            categories = await categoryService.GetCategoriesAsync(restaurant.Menu.MenuId);
        }
        catch (Exception e)
        {
    // update some error label here, or show popup..
        }
    }
    
    public async Task ReadRestaurant()
    {
        string restaurantAsJson = await jsRuntime.InvokeAsync<string>("sessionStorage.getItem", "currentRestaurant");

        if (!string.IsNullOrEmpty(restaurantAsJson))
        {
            restaurant = JsonSerializer.Deserialize<Restaurant>(restaurantAsJson);
        }
    }


    private void AddMenu()
    {
        //TODO method that will create new menu and probably reload this page
    }

    private async void EditMenuDescription()
    {
        await menuService.UpdateMenuAsync(restaurant.Menu);
    }
    
    private Category newCategory = new Category();
    private async void AddCategory()
    {
        newCategory.MenuId = restaurant.Menu.MenuId;
        await categoryService.AddCategoryAsync(newCategory);
    }
}
