@page "/EditRestaurant"
@using Entities
@using Client.Data.RestaurantService
@using Microsoft.AspNetCore.Components
@using System
@using System.Threading.Tasks
@using Entities
@using Microsoft.AspNetCore.Components
@inject IRestaurantService restaurantService;

<h3>EditRestaurant</h3>
@if (Restaurant.Name != null) {
    <EditForm Model="Restaurant" OnValidSubmit="EditExistingRestaurant">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <div class="form-group">New name of the restaurant:<br/>
            <InputText @bind-Value="Restaurant.Name"/></div>
    
        <div class="form-group">New address of the restaurant:<br/>
            <InputText @bind-Value="Restaurant.Address"/></div>
    
        <div class="form-group">New phone number of the restaurant:<br/>
            <InputText @bind-Value="Restaurant.PhoneNumber"/></div>
    
        <div class="form-group">New opening hours: <br/>
            <p> Monday:<InputText @bind-Value="Restaurant.OpeningHoursMonday"></InputText><br/>
                Tuesday:<InputText @bind-Value="Restaurant.OpeningHoursTuesday"></InputText><br/>
                Wednesday:<InputText @bind-Value="Restaurant.OpeningHoursWednesday"></InputText><br/>
                Thursday:<InputText @bind-Value="Restaurant.OpeningHoursThursday"></InputText><br/>
                Friday:<InputText @bind-Value="Restaurant.OpeningHoursFriday"></InputText><br/>
                Saturday:<InputText @bind-Value="Restaurant.OpeningHoursSaturday"></InputText><br/>
                Sunday:<InputText @bind-Value="Restaurant.OpeningHoursSunday"></InputText><br/>
            </p>
        </div>
    
        <div class="form-group">New description of restaurant:<br/>
            <InputText @bind-Value="Restaurant.Description"/></div>
    
        <div class="form-group">Delivery options:<br/>
            First:
            Name: <InputText @bind-Value="Restaurant.DeliveryOption1.DeliveryName"/><br/>
            Price: <InputNumber @bind-Value="Restaurant.DeliveryOption1.Price"/><br/><br/>
            
            Second:
            Name: <InputText @bind-Value="Restaurant.DeliveryOption2.DeliveryName"/><br/>
            Price: <InputNumber @bind-Value="Restaurant.DeliveryOption2.Price"/><br/>
        </div>
        
        <div class="form-group">Make my profile:<br/>
            <InputRadioGroup @bind-Value="@Restaurant.Name">
                <div class="row">
                    <div class="column" style="padding-right: 10px">
                        Public
                    </div>
                    <div class="column" style="padding-right: 10px">
                        <InputRadio Value="@true"/>
                    </div>
                    
                    <div class="column" style="padding-right: 10px">
                        Private
                    </div>
                    <div class="column" style="padding-right: 10px">
                        <InputRadio Value="@false"/>
                    </div>
                </div>
            </InputRadioGroup>
        </div>

        <p class="actions"><button class="btn btn-outline-dark" type="submit">Save</button></p>
        <p class="actions"><button @onclick="DeleteProfile" class="btn btn-warning" >Delete my profile</button></p>
    </EditForm>
    
    
}


@code {
    [Parameter]
    public Restaurant Restaurant { get; set; }
    
    //private Restaurant restaurant = new ();
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            //restaurant = await restaurantService.GetRestaurantsAsync(Username);
        }
        catch (Exception e)
        {
    // update some error label here, or show popup..
        }
    }
    
    private void EditExistingRestaurant()
        {
            restaurantService.UpdateRestaurantAsync(Restaurant);
        }
    
    private void DeleteProfile()
    {
         restaurantService.DeleteRestaurantAsync(Restaurant.Username);
    }
}