@page "/Order/{username}"
@using System.Collections
@using System.Text.Json
@using Client.Data.CustomerService
@using Entities
@inject ICustomerServiceT1 customerService;
@inject IJSRuntime jsRuntime;

<h3>Create an Order</h3>

<div class="card">
    <div class="card-body">
        @foreach (Item item in shoppingList)
        {
            <div class="row">
                <div class="column" style="width: 30%; padding-left: 20px">
                    <h6>@item.Name</h6>
                </div>
                <div class="column" style="width: 60%">
                    <small>@item.Description</small>
                </div>
                <div class="column" style="width: 10%">
                    <label>@item.Price</label>
                </div>
            </div>
            <hr>
        }
    </div>
</div>

<!-- Restaurant and Customer info -->
<h3 style="padding-top: 20px">Infromation</h3>
<div class="row" style="padding-left: 16px">
    <div class="column">
            <div class="card">
                <div class="card-body">
                    <div>
                        <h5>From Santa Restaurant aps.</h5>
                        <div class="row" style="padding-left: 20px;">
                            <div class="column" style="padding-left: 20px">
                                <label>00450000000</label>
                            </div>
                        </div>
                        <div class="row" style="padding-left: 20px;">
                            <div class="column" style="padding-left: 20px">
                                <label>Fredensgade 11 8700 Horsens</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="column" style=" padding-left: 20px">
            <div class="card">
                <div class="card-body">
                    <h5>To @customer.FirstName @customer.LastName</h5>
                        <div class="row" style="padding-left: 20px;">
                            <div class="column" style="padding-left: 20px">
                                <label>@customer.PhoneNumber</label>
                            </div>
                        </div>
                        <div class="row" style="padding-left: 20px;">
                            <div class="column" style="padding-left: 20px">
                                <label>@customer.Address</label>
                            </div>
                        </div>
                </div>
            </div>
        </div>
</div>
<!-- Restaurant and Customer info -->

<!-- Delivery -->
<h3 style="padding-top: 20px">Delivery</h3>
<div class="card">
    <div class="card-body">
        <h5>Choosen delivery</h5>
        <div style="padding-left: 20px;">
            <p>Home delivery</p>
            <p>150 dkk</p>
        </div>
        <div style="padding-left: 20px;">
            <input class="form-control" placeholder="Address of delivery">
            <small>Enter the adress if it's different than in your profile</small>
        </div>
    </div>
</div>
<!-- Delivery -->


<!-- Wishes -->
<h3 style="padding-top: 20px">Delivery</h3>
<div class="card">
    <div class="card-body">
        <p>Your wishes</p>
    </div>
</div>
<!-- Wishes -->

<p style="padding: 20px" class="actions"><button class="btn btn-primary" data-dismiss="modal">Confirm an order</button></p>

@code{
    [Parameter]
    public string username { get; set; }

    private Customer customer = new ();
    private IList<Item> shoppingList = new List<Item>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            customer = await customerService.GetCustomerAsync(username);
            await ReadShoppingList();
        }
        catch (Exception e)
        {
    // update some error label here, or show popup..
        }
    }
    
    public async Task ReadShoppingList()
    {
        string itemsAsJson = await jsRuntime.InvokeAsync<string>("sessionStorage.getItem", "shoppingCart");
        Console.WriteLine(itemsAsJson);
        
        if (!string.IsNullOrEmpty(itemsAsJson))
        {
            shoppingList = JsonSerializer.Deserialize<IList<Item>>(itemsAsJson);
        }
    }
    
}