@page "/SRestaurant/{username}"
@using Entities
@using Client.Components
@using Client.Components.RestaurantPageComponents
@using Client.Data.CategoryService
@using Client.Data.MenuService
@using Client.Data.RestaurantService
@inject ICategoryServiceT1 categoryService;
@inject IMenuServiceT1 menuService;
@inject IRestaurantService restaurantService;


<h3>@restaurant.Name</h3>
<p>@restaurant.Description</p>

<!-- RESTAURANT INFO COMPONENT -->
<RestaurantInfoComponent restaurant="restaurant"></RestaurantInfoComponent>
<!-- RESTAURANT INFO COMPONENT -->


<!-- RESTAURANT MENU COMPONENT -->
<div class="card" style="padding-top: 20px">
    <div class="card-body">
        <a data-toggle="collapse" data-target="#collapseDescription"><h4>Description</h4></a>
        <div class="collapse" id="collapseDescription">
            <p>@restaurant.Menu.Description</p>
        </div>
        <hr>
        <h4>Categories</h4>
        
        <hr>
        <!-- RESTAURANT CATEGORY COMPONENT - ALREADY CREATED -->
        @foreach (Category category in categories)
        {
            <CategoryComponent Category="category"></CategoryComponent>
        }
        <!-- RESTAURANT CATEGORY COMPONENT - ALREADY CREATED -->

    </div>
</div>
<!-- RESTAURANT MENU COMPONENT -->




@code
{
    [Parameter]
    public string username { get; set; }

    private Restaurant restaurant = new Restaurant()
    {
        DeliveryOption1 = new Delivery(),
        DeliveryOption2 = new Delivery(),
        Menu = new Menu(),
    };

    private IList<Category> categories = new List<Category>();

    private Menu menu = new Menu();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            restaurant = await restaurantService.GetRestaurantAsync(username);
            categories = await categoryService.GetCategoriesAsync(restaurant.Menu.MenuId);
        }
        catch (Exception e)
        {
    // update some error label here, or show popup..
        }
    }
    
    
    
    /*

    Restaurant restaurant = new Restaurant()
    {
        Username = "test",
        Name = "Santa Restaurant aps.",
        Address = "Vestergade 12 8700 Horsens",
        DeliveryOption1 = new Delivery()
        {
            DeliveryName = "Takeaway",
            Price = 15,
        },
        DeliveryOption2 = new Delivery()
        {
            DeliveryName = "Delivery",
            Price = 100,
        },
        Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum.",
        OpeningHoursMonday = "9:00 - 21:00",
        OpeningHoursTuesday = "9:00 - 21:00",
        OpeningHoursWednesday = "9:00 - 21:00",
        OpeningHoursThursday = "9:00 - 21:00",
        OpeningHoursFriday = "9:00 - 21:00",
        OpeningHoursSaturday = "9:00 - 21:00",
        OpeningHoursSunday = "9:00 - 21:00",
        Visibility = true,
        Menu = new Menu()
        {
            UserName = "test",
            MenuId = 1,
            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum.",
        }
    };

    Category category1 = new Category()
    {
        Name = "Starters",
        CategoryId = 1,
        MenuId = 1,
    };
    
    Category category2 = new Category()
    {
        Name = "Main Menu"
    };
    
    */
}
