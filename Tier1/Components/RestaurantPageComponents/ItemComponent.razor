@using Entities
@using System.Text.Json
@inject IJSRuntime jsRuntime;

<div class="column" style="margin:10px ;min-width: 200px;max-width: 200px;">
    <div class="card" style="min-height: 370px; max-height: 370px">
        <div class="card-body">
            <a data-toggle="modal" data-target="#@Item.Name.Replace(" ","")modal"><h6>@Item.Name</h6></a>
            <hr>
            <h6>@Item.Price dkk</h6>
            <hr>
            <p style="min-height: 160px">@Item.Description</p>
            <hr>
            <div class="container-fluid">
                <button style="width: 100%" @onclick="Add" class="btn btn-success">Add</button>
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public Item Item { get; set; }

    private IList<Item> shoppingCart = new List<Item>();

    public async Task Read()
    {
        string itemsAsJson = await jsRuntime.InvokeAsync<string>("sessionStorage.getItem", "shoppingCart");
        
        if (!string.IsNullOrEmpty(itemsAsJson))
        {
            shoppingCart = JsonSerializer.Deserialize<IList<Item>>(itemsAsJson);
        }
    }
    
    
    public async Task Add()
    {
        await Read();
        shoppingCart.Add(Item);
        string serialisedData = JsonSerializer.Serialize(shoppingCart);
        await jsRuntime.InvokeVoidAsync("sessionStorage.setItem", "shoppingCart", serialisedData);
    }
    
}