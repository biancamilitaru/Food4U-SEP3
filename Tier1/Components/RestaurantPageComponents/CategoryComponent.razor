@using Entities
@using Client.Data.ItemService
@inject IItemServiceT1 itemService;

<a data-toggle="collapse" data-target="#@Category.Name.Replace(" ", "")" role="button" aria-expanded="false" aria-controls="@Category.Name.Replace(" ", "")">
    <div class="div-category">
        <div class="row" style="padding-left: 20px" xmlns="http://www.w3.org/1999/html">
            <div class="column" style="padding-right: 20px">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="" class="bi bi-arrow-down-right-square-fill" viewBox="0 0 16 16">
                    <path d="M14 16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12zM5.904 5.197 10 9.293V6.525a.5.5 0 0 1 1 0V10.5a.5.5 0 0 1-.5.5H6.525a.5.5 0 0 1 0-1h2.768L5.197 5.904a.5.5 0 0 1 .707-.707z"/>
                </svg>
            </div>

            <div class="column">
                <a data-toggle="collapse" data-target="#@Category.Name.Replace(" ", "")" role="button" aria-expanded="false" aria-controls="@Category.Name.Replace(" ", "")">
                    <h5>@Category.Name</h5>
                </a>
            </div>
        </div>
    </div>
</a>



<div class="collapse" id="@Category.Name.Replace(" ","")">
    <div class="row" style="padding-left: 20px">
        @foreach (Item item in items)
        {
            <ItemComponent Item="@item"></ItemComponent>
        }
    </div>
</div>
<hr>


@code {
    [Parameter]
    public Category Category { get; set; }

    private IList<Item> items = new List<Item>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            items = await itemService.GetItemsAsync(Category.CategoryId);
        }
        catch (Exception e)
        {
    // update some error label here, or show popup..
        }
    }
}